name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create GitHub Release
      run: |
        gh release create ${{ github.ref }} \
          --title "Release ${{ github.ref }}" \
          --notes "Release notes for ${{ github.ref }}"
      env:
        GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    - name: Get Upload URL
      id: get_upload_url
      run: |
        UPLOAD_URL=$(gh release view $(basename ${{ github.ref }}) --json uploadUrl -q '.uploadUrl')
        echo "upload_url: $UPLOAD_URL"
        echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV
        echo "upload_url=$UPLOAD_URL" >> $GITHUB_ENV
        echo "::set-output name=upload_url::$UPLOAD_URL"
      env:
        GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  build-and-release:
    needs: prepare-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies with pnpm
      run: npm_config_target_arch=${{ matrix.arch }} pnpm install

    - name: Run bundle
      run: pnpm run bundle

    - name: Transform OS and Arch
      run: echo "BUILD_TARGET=$(echo "${{ matrix.os }}" | sed 's/ubuntu-latest/linux/;s/windows-latest/win/;s/macos-latest/mac/')" >> $GITHUB_ENV

    - name: Build for target OS and Arch
      run: npm run build:$BUILD_TARGET-${{ matrix.arch }}

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.prepare-release.outputs.upload_url }}
        asset_path: ./${{ env.BUILD_TARGET }}-${{ matrix.arch }}/bundle
        asset_name: clone-$BUILD_TARGET-${{ matrix.arch }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
